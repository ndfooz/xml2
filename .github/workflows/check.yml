on:
  push:
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'

name: check

env:
  cache-version: 'cache-v1'
  R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
  NOT_CRAN: true
  TZ: UTC
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
  PKG_CONFIG_PATH: C:/rtools45/ucrt64/lib/pkgconfig

jobs:
  build-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    container: ${{ matrix.config.cont }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, r: 'devel', bioc: 'devel', cont: "bioconductor/bioconductor_docker:devel", rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest" }
          - { os: windows-latest, r: 'release', bioc: '3.22' }
          - { os: windows-latest, r: 'latest', bioc: '3.22'}

    steps:

      - name: Set R Library home on Linux
        if: runner.os == 'Linux'
        run: |
          mkdir /__w/_temp/Library
          echo ".libPaths('/__w/_temp/Library')" > ~/.Rprofile

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up R from r-lib
        if: runner.os != 'Linux'
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Setup pandoc from r-lib
        if: runner.os != 'Linux'
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install Linux system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y pkg-config libxml2-dev

      - name: Install system dependencies [macOS]
        if: runner.os == 'macOS'
        run: |
          brew install pkg-config libxml2
          export PKG_CONFIG_PATH="/opt/homebrew/opt/libxml2/lib/pkgconfig"
          export CPPFLAGS="-I/opt/homebrew/opt/libxml2/include"
          export LDFLAGS="-L/opt/homebrew/opt/libxml2/lib"

          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV
          echo "CPPFLAGS=$CPPFLAGS" >> $GITHUB_ENV
          echo "LDFLAGS=$LDFLAGS" >> $GITHUB_ENV

      - name: Install Windows system dependencies 
        if: runner.os == 'Windows'
        run: |
          pacman -Sy --noconfirm mingw-w64-ucrt-x86_64-pkgconf mingw-w64-ucrt-x86_64-libxml2
        shell: bash

      - name: Add Rtools ucrt64 toolchain to PATH 
        if: runner.os == 'Windows'
        run: |
          echo "C:\rtools45\ucrt64\bin" >> $env:GITHUB_PATH
          echo "C:\rtools45\ucrt64\usr\bin" >> $env:GITHUB_PATH
        shell: pwsh

      - name: Query dependencies
        run: |
          install.packages("remotes")
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages 
        if: runner.os != 'Linux'
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ env.cache-version }}-${{ runner.os }}-r-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ env.cache-version }}-${{ runner.os }}-r-

      - name: Cache R packages on Linux
        if: runner.os == 'Linux'
        uses: actions/cache@v4
        with:
          path: /home/runner/work/_temp/Library
          key: ${{ env.cache-version }}-linux-r-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ env.cache-version }}-linux-r-

      - name: Install R dependencies
        run: |
          remotes::install_local(dependencies = TRUE, force = TRUE, upgrade = "always")
        env:
          PKG_CONFIG_PATH: C:/rtools45/ucrt64/lib/pkgconfig
        shell: Rscript {0}

      - name: Upload check results if failed
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: check-results-${{ runner.os }}
          path: check